<div class="CDcontent_block" xmlns:nxu="http://nuxeo.org/nxweb/util"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:nxh="http://nuxeo.org/nxweb/html">

	<c:set var="canHaveMainBlob"
		value="#{!empty currentDocumentAsBlobHolder}" />
	<c:set var="hasMainBlob"
		value="#{!empty currentDocumentAsBlobHolder.blob}" />
	<c:set var="hasOtherBlobs"
		value="#{currentDocument.hasSchema('files') and !empty currentDocument.files.files}" />

	<c:if test="#{hasMainBlob || hasOtherBlobs || canHaveMainBlob}">

		<div class="CDsummaryTitle">

			<table width="100%" cellspacing="0" cellpadding="0" border="0">
				<thead>
					<tr>
						<td width="40%" valign="middle" align="left">

							<div class="CDSummaryHeaders">
								<h:outputText value="#{messages['action.view.summary.content']}" />
							</div>
						</td>

						<td width="15%" valign="middle" align="center"><h:outputText
								value="#{messages['action.view.summary.version']}" /></td>

						<td width="20%" valign="middle" align="center"><h:outputText
								value="#{messages['action.view.summary.size']}" /></td>
								
			
								
								
						<td width="13%" valign="middle" align="center"><h:outputText
								value="#{messages['action.view.summary.shared']}" /></td>
						<!-- 	<td  width="12%" valign="middle" align="center"><h:outputText value="#{messages['action.view.summary.synced']}" /></td> -->
						<td width="12%" class="CDSummaryActions" valign="middle"
							align="center"><h:outputText
								value="#{messages['action.view.summary.actions']}" /></td>
					</tr>
				</thead>
			</table>
		</div>

	</c:if>

	<c:if test="#{!hasMainBlob and canHaveMainBlob}">
		<div class="dropzone tips" context="mainBlob" id="mainBlobDropZone">
			#{messages['label.dnd.dropHere']}</div>
	</c:if>
	<c:if test="#{hasMainBlob}">
		<div class="dropzone" context="mainBlob" id="mainBlobDropZone">
			<table width="100%" cellspacing="0" cellpadding="0" border="0">
				<tbody>
					<tr>
						

						<td width="40%" align="left" docRef="#{currentDocument.id}">
							<div align="left" style="padding-left: 2em;"
								downloadUrl="#{nxd:fileUrl('downloadFile', currentDocument, 'blobholder:0', currentDocumentAsBlobHolder.blob.filename)}"
								fileName="#{currentDocumentAsBlobHolder.blob.filename}"
								mimetype="#{currentDocumentAsBlobHolder.blob.mimeType}">

								<nxh:graphicImage style="padding-right:5px;"
									value="#{nxd:fileIconPath(currentDocumentAsBlobHolder.blob)}"
									rendered="#{! empty nxd:fileIconPath(currentDocumentAsBlobHolder.blob)}" />

								<h:outputText value="  " />
								<h:outputText value="  " />

								<h:outputText class="CDFileStyleUn"
									value="#{currentDocumentAsBlobHolder.blob.filename}" />
								<!--   <h:outputText value=" (#{nxu:printFileSize(currentDocumentAsBlobHolder.blob.length)})"/>  -->
							</div>
						</td>

						<!-- <td> <h:outputText class="summary_locked" value="#{messages['label.summary.locked']}"/></td> -->

						<td width="15%" align="center"><h:outputText
								value="#{currentDocumentVersionInfo.versionLabel}" /></td>

						<td width="20%" align="center"><h:outputText
								value="#{nxu:printFileSize(currentDocumentAsBlobHolder.blob.length)}" />
						</td>

					<!-- 	<td width="13%" align="center"><h:graphicImage
								value="/icons/Share_icon.png" alt="" /></td>
 -->
						<!--  <td width="12%" align="center"></td> -->

						<td width="12%" class="CDSummaryActions" align="center">



							<table width="100%" cellspacing="0" cellpadding="0" border="0">
								<tr>
									<td width="35%" align="center" valign="middle">

										<div class="restoreFile_block">
											<c:if
												test="#{deleteActions.trashManagementEnabled and deleteActions.canRestoreCurrentDoc}">

												<h:outputText
													value="#{messages['label.summary.restoreDeletedDocument']}" />

												<h:commandLink value="#{messages['command.undeleteDocs']}"
													action="#{deleteActions.restoreCurrentDocument}"
													immediate="true" />
											</c:if>
										</div>

										<div class="lockFile_block" id='lock_unlock_button'>

											<c:if test="#{!empty currentDocumentLockDetails}">
												<!-- <h:outputText value="#{messages['label.summary.locked.intro']} "/> -->
												<!--  <h:outputText class="summary_locked" value="#{messages['label.summary.locked']}"/> -->


												<c:if test="#{currentDocumentCanBeUnlocked}">
													<!-- <h:outputText value=" | " /> -->

													<h:commandLink value="#{messages['command.unlock']}"
														action="#{lockActions.unlockCurrentDocument}"
														immediate="true" style="display:none" />


													<h:commandLink
														action="#{lockActions.unlockCurrentDocument}"
														immediate="true">
														<h:graphicImage
															value="/icons/contextual_menu/UnLock_Icon.png"
															alt="#{messages['command.unlock']}" />
													</h:commandLink>


												</c:if>

												<div class="lockDetail">

													<script>
       												 jQuery(".documentLockerTooltip").tooltip();
      												</script>

												</div>
											</c:if>

											<c:if test="#{empty currentDocumentLockDetails}">
												<!--  <h:outputText value="#{messages['label.summary.locked.intro']} "/> -->
												<!-- <h:outputText class="summary_unlocked" value="#{messages['label.summary.unlocked']} "/> -->
												<c:if test="#{currentDocumentCanBeLocked}">
													<!-- <h:outputText value=" | " /> -->

													<h:commandLink value="#{messages['command.lock']}"
														action="#{lockActions.lockCurrentDocument}"
														immediate="true" style="display:none" />

													<h:commandLink action="#{lockActions.lockCurrentDocument}"
														immediate="true">
														<h:graphicImage
															value="/icons/contextual_menu/Lock_Icon.png"
															alt="#{messages['command.lock']}" />
													</h:commandLink>

												</c:if>
											</c:if>
										</div>
									</td>
									<td width="35%" align="center" valign="middle"><nxu:methodResult
											name="hasPDFCapabilities"
											value="#{conversionActions.isExportableToPDF(currentDocumentAsBlobHolder)}">
											<h:panelGroup rendered="#{hasPDFCapabilities}">
												<nxh:commandLink
													action="#{conversionActions.generatePdfFileFromBlobHolder(currentDocumentAsBlobHolder)}">
													<nxh:graphicImage value="/icons/PDFDownload_icon.png"
														title="#{messages['label.document.generatePdf']}"
														alt="#{messages['label.document.generatePdf']}" />
												</nxh:commandLink>
											</h:panelGroup>
										</nxu:methodResult></td>

									<td width="30%" align="center" valign="middle">
										<div>
											<h:commandLink
												action="#{commentManagerActions.deleteComment}"
												value="#{messages['command.delete']}"
												rendered="#{threadEntry.comment.comment.author == commentManagerActions.principalName or commentManagerActions.principalIsAdmin}"
												style="display:none">
												<f:param name="deleteCommentId"
													value="#{threadEntry.comment.id}" />
											</h:commandLink>

											<h:commandLink
												action="#{commentManagerActions.deleteComment}"
												immediate="true">
												<h:graphicImage
													value="/icons/contextual_menu/Delete_Icon.png"
													alt="#{messages['command.delete']}" />
											</h:commandLink>


										</div>
									</td>
								</tr>
							</table> <nxu:methodResult name="editable"
								value="#{liveEditHelper.isDocumentLiveEditable(currentDocument, 'file', 'content')}">
								<h:outputLink
									value="#{nxd:liveEditUrl(currentDocument, 'file', 'content', 'filename')}"
									rendered="#{editable}">
									<h:graphicImage value="/icons/application_form_edit.png"
										alt="#{messages['label.document.directEdit']}"
										title="#{messages['label.document.directEdit']}" />
								</h:outputLink>
							</nxu:methodResult> <!-- <nxh:outputLink
             				 value="#{nxd:fileUrl('downloadFile', currentDocument, 'blobholder:0', currentDocumentAsBlobHolder.blob.filename)}">
             					 <nxh:graphicImage value="/icons/download.png"
              						  title="#{messages['label.document.download']}"
                					alt="#{messages['label.document.download']}"/>
            						</nxh:outputLink> -->

						</td>

					</tr>
				</tbody>
			</table>
		</div>
	</c:if>

	<c:if test="#{hasOtherBlobs}">
		<div class="dropzone" context="otherBlobs" id="otherBlobsDropZone">
			<table>
				<tbody>
					<nxu:inputList value="#{currentDocument.files.files}"
						id="files_input" model="model">
						<tr>
							<td class="labelColumn"><h:outputText
									value=" #{messages['label.summary.download.attachments']}"
									rendered="#{model.rowIndex == 0}" /></td>
							<td class="fieldColumn"><nxh:graphicImage
									value="#{nxd:fileIconPath(currentDocument.files.files[model.rowIndex].file)}"
									rendered="#{! empty nxd:fileIconPath(currentDocument.files.files[model.rowIndex].file)}" />
								<h:outputText
									value="#{currentDocument.files.files[model.rowIndex].filename}" />
								<h:outputText
									value=" (#{nxu:printFileSize(currentDocument.files.files[model.rowIndex].file.length)})" />
							</td>
							<td class="CDSummaryActions"><nxu:methodResult
									name="hasPDFCapabilities"
									value="#{conversionActions.isExportableToPDF(currentDocument.files.files[model.rowIndex].file)}">
									<h:panelGroup rendered="#{hasPDFCapabilities}">
										<h:commandLink action="#{conversionActions.generatePdfFile}">
											<f:param name="fileFieldFullName"
												value="#{nxd:propertyPath('files:files', model.rowIndex, 'file')}" />
											<f:param name="filename"
												value="#{currentDocument.files.files[model.rowIndex].filename}" />
											<nxh:graphicImage value="/icons/PDFDownload_icon.png"
												title="#{messages['label.document.generatePdf']}"
												alt="#{messages['label.document.generatePdf']}" />
										</h:commandLink>
									</h:panelGroup>
								</nxu:methodResult> <nxh:outputLink
									value="#{nxd:complexFileUrl('downloadFile', currentDocument, 'files:files', model.rowIndex, 'file', currentDocument.files.files[model.rowIndex].filename)}">
									<nxh:graphicImage value="/icons/download.png"
										style="vertical-align:middle"
										title="#{messages['label.document.download']}"
										alt="#{messages['label.document.download']}" />
								</nxh:outputLink></td>
						</tr>
					</nxu:inputList>
				</tbody>
			</table>
		</div>
	</c:if>

</div>
