<div xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:nxd="http://nuxeo.org/nxweb/document"
	xmlns:nxh="http://nuxeo.org/nxweb/html"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
	xmlns:nxl="http://nuxeo.org/nxforms/layout"
	xmlns:nxu="http://nuxeo.org/nxweb/util">



	<c:if test="false">
  Template rendering a content view defined on a document.

  Parameters:
  - contentViewName: the content view name, mandatory.
  - contentViewId: a marker to generate unique ids
    when iterating over a list of content views, optional
    when only one content view is displayed in the page.
  - hideEmpty: if set to true, nothing is displayed when there is no
    item to list (even the sentence saying that there are no items in the
    list). optional, defaults to false.
  - foldable: if set to true, shows the content view in a foldable box.
    optional, defaults to false.
  - removeForm: if set to true, do not enclose the listing with a form
    (optional, available since 5.5, defaults to false).
  - useAjaxForm: if removeForm is not set or set to false, use an ajax form if
    set to true. This will have an impact on selection actions as they will be
    using ajax calls. (optional, available since 5.6, defaults to false).
  - useAjaxPagination: use ajax links for page navigation controls when set to
    true (optional, available since 5.6, defaults to false).

  Optional parameters used to override the content view definition when not
  empty:
  - contentViewTitle: title to display for this content view instead of the
    one set on the content view definition.
  - translateContentViewTitle: boolean to use when translating title,
    only checked if contentViewTitle is not empty.
  - contentViewIconPath
  - showTitle
  - showPageSizeSelector
  - showRefreshCommand
  - showFilterForm
  - defaultPageSize
  - showCSVExport
  - showPDFExport
  - showSyndicationLinks
  - contentViewDocument: the document to use for filter form instead of
    the default one managed by the content view. optional.
  - contentViewSortInfos: the default sort infos, optional.
  - selectedResultLayoutColumns: list of result layout columns selected,
    optional

  Templating zones that can be replaced using facelets tag ui:define:
  - content_view_title
  - content_view_quick_search_layout
  - content_view_selector
  - content_view_search_layout
  - content_view_syndication_buttons
  - content_view_footer
  - empty_folder_label
</c:if>

	<nxu:set var="finalDefaultPageSize"
		value="#{nxu:test(empty defaultPageSize, -1, defaultPageSize)}">
		<nxu:set var="finalSortInfos"
			value="#{nxu:test(empty contentViewSortInfos, null, contentViewSortInfos)}">
			<nxu:set var="contentView"
				value="#{contentViewActions.getContentViewWithProvider(contentViewName, contentViewDocument, finalSortInfos, finalDefaultPageSize, -1, -1)}"
				cache="true">
				<nxu:set var="selectedResultLayoutColumns"
					value="#{nxu:test(selectedResultLayoutColumns == null, contentView.currentResultLayoutColumns, selectedResultLayoutColumns)}"
					cache="true">

					<c:if test="#{contentView != null}">
						<nxu:set var="contentViewRenderId"
							value="cv_#{contentView.name}_#{contentViewId}" cache="true">
							<a4j:region id="#{contentViewRenderId}_region">
								<a4j:outputPanel id="#{contentViewRenderId}_panel">

									<nxu:set var="provider"
										value="#{contentView.currentPageProvider}" cache="true">
    #{provider.setSelectedEntries(documentsListsManager.getWorkingList(contentView.selectionListName))}
  <c:if test="#{not hideEmpty or not empty provider.currentPage}">

											<div
												class="#{nxu:test(foldable, 'foldableBox #{foldableBoxStyleClass}', '#{foldableBoxStyleClass}')}">

												<ui:insert name="content_view_title">
													<nxu:set var="translateTitle"
														value="#{nxu:test(empty contentViewTitle, contentView.translateTitle, translateContentViewTitle)}">
														<nxu:set var="title"
															value="#{nxu:test(empty contentViewTitle, contentView.title, contentViewTitle)}">
															<nxu:set var="finalTitle"
																value="#{nxu:test(translateTitle, messages[title], title)}">
																<nxu:set var="iconPath"
																	value="#{nxu:test(empty contentViewIconPath, contentView.iconPath, contentViewIconPath)}">
																	<c:choose>
																		<c:when test="#{foldable}">
																			<h3 class="unfolded">
																				<a href="#nogo" onclick="return toggleBox(this)">
																					<c:if test="#{!empty contentViewIconPath}">
																						<nxu:graphicImage value="#{contentViewIconPath}"
																							title="#{finalTitle}" />
																					</c:if> #{finalTitle}
																				</a>
																			</h3>
																		</c:when>
																		<c:otherwise>
																			<nxu:set var="finalShowTitle"
																				value="#{nxu:test(empty showTitle, contentView.showTitle, showTitle)}">
																				<c:if
																					test="#{finalShowTitle and not empty finalTitle}">
																					<div class="contentViewTitle">
																						<h3>
																							<c:if test="#{!empty contentViewIconPath}">
																								<nxu:graphicImage value="#{contentViewIconPath}"
																									title="#{finalTitle}" />
																							</c:if>
																							#{finalTitle}
																						</h3>
																					</div>
																				</c:if>
																			</nxu:set>
																		</c:otherwise>
																	</c:choose>
																</nxu:set>
															</nxu:set>
														</nxu:set>
													</nxu:set>
												</ui:insert>

												<div class="#{nxu:test(foldable, 'boxBody', '')}">

													<ui:insert name="content_view_header" />
													<!-- 
													  <ui:insert name="content_view_quick_search_layout">
         											 <c:if test="#{contentView.searchLayout.filterDisplayType == 'quick'}">
            											<ui:include src="/incl/content_view_quick_search_layout.xhtml" />
         												 </c:if>
       													 </ui:insert> 
 -->
													<ui:insert name="content_view_selector">
														<ui:include
															src="/incl/content_view_result_otherdoc_layout.xhtml" />
														<div style="clear: both;" />
													</ui:insert>

													<ui:insert name="content_view_search_layout">
														<c:if
															test="#{contentView.searchLayout.filterDisplayType == 'default' or empty contentView.searchLayout.filterDisplayType}">
															<ui:include src="/incl/content_view_search_layout.xhtml" />
															<div style="clear: both;" />
														</c:if>
													</ui:insert>

													<a4j:outputPanel id="#{contentViewRenderId}_resultsPanel">
														<script>
            jQuery(document).ready(function() {
            	initNXDrapAndDropOnPage(jQuery('##{contentViewRenderId}_panel'));
            });
          </script>

														<ui:decorate template="/incl/documents_layout_table.xhtml">
															<ui:param name="providerId" value="#{contentViewId}" />
															<ui:param name="documents"
																value="#{provider.currentSelectPage}" />
															<ui:param name="layoutName"
																value="#{contentView.currentResultLayout.name}" />
															<ui:param name="contentIdToBeReRendered"
																value="#{contentViewRenderId}_resultsPanel" />

															<ui:define name="empty_folder_label">
																<ui:insert name="empty_content_view_label">
																	<c:set var="defaultSentence"
																		value="#{nxu:test(contentView.showFilterForm and nxd:isDirty(contentView.searchDocumentModel), messages['label.content.empty.search'], messages['label.content.emptyFolder'])}" />
																	<c:set var="emptySentence"
																		value="#{nxu:test(contentView.translateEmptySentence, messages[contentView.emptySentence], contentView.emptySentence)}" />
																	<h:outputText
																		value="#{nxu:test(empty emptySentence, defaultSentence, emptySentence)}"
																		rendered="#{documents.rowCount == 0 and not provider.hasError()}" />
																</ui:insert>
															</ui:define>

															<ui:define name="error_message">
																<c:if test="#{provider.hasError()}">
                #{messages[provider.errorMessage]}
              </c:if>
															</ui:define>

															<ui:define name="buttons">
																<a4j:outputPanel id="ajax_selection_buttons"
																	ajaxRendered="false">
																	<div id="selection_buttons">
																		<table>
																			<tbody>
																				<tr>
																					<td><c:forEach var="actionCategory"
																							items="#{contentView.actionsCategories}"
																							varStatus="status">
																							<nxu:set var="actions"
																								value="#{webActions.getUnfiltredActionsList(actionCategory)}"
																								cache="true">
																								<c:if
																									test="#{not status.first and not empty actions}">
																									<br />
																								</c:if>
																								<nxu:dataList var="sel_action"
																									value="#{actions}"
																									id="clipboardActionsTable_#{contentViewId}_#{status.index}">
																									<span id="#{sel_action.id}"> <nxh:commandButton
																											styleClass="button"
																											action="#{sel_action.getLink()}"
																											value="#{messages[sel_action.label]}"
																											onclick="#{sel_action.confirm}"
																											disabled="#{!sel_action.available}"
																											immediate="#{sel_action.immediate}"
																											id="clipboardActionsButton" />
																									</span>
																								</nxu:dataList>
																							</nxu:set>
																						</c:forEach></td>
																					<td rowSpan="#{contentView.actionsCategories.size}"
																						valign="middle"><a4j:status>
																							<f:facet name="start">
																								<h:graphicImage value="/img/standart_waiter.gif" />
																							</f:facet>
																						</a4j:status></td>
																				</tr>
																			</tbody>
																		</table>
																	</div>
																</a4j:outputPanel>
															</ui:define>

															<ui:define name="syndication_buttons">
																<ui:insert name="content_view_syndication_buttons">
																	<nxu:set var="finalShowSyndicationLinks"
																		value="#{nxu:test(empty showSyndicationLinks, contentView.currentResultLayout.showSyndicationLinks, showSyndicationLinks)}">
																		<c:if test="#{finalShowSyndicationLinks}">
																			<ui:include
																				src="/incl/content_view_syndication_buttons.xhtml" />
																			<div style="clear: both;" />
																		</c:if>
																	</nxu:set>
																</ui:insert>
															</ui:define>

														</ui:decorate>

													</a4j:outputPanel>

													<ui:insert name="content_view_footer" />

												</div>
											</div>

										</c:if>
									</nxu:set>

								</a4j:outputPanel>
							</a4j:region>
						</nxu:set>
					</c:if>

				</nxu:set>
			</nxu:set>
		</nxu:set>
	</nxu:set>

</div>
